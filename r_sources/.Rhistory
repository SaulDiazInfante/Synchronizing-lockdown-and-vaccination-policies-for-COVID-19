setwd("~/Insync/sauld@cimat.mx/Google Drive/UNISON/Articles/NovelCovid-19/NovelCovid19-ControlModelling/NovelCovid19-ControlModellingGitHub/UNISON-ITSON-VACCINATON-PRJ/r_sources/pre_examples")
setwd("~/Insync/sauld@cimat.mx/Google Drive/UNISON/Articles/NovelCovid-19/NovelCovid19-ControlModelling/UNISON-UADY-VACCINATION-PRJ/r_sources/mcmc_parameter_estimation/UNISON-UADY-Project")
---
title: "Vaccination estimation Ciudad de Mexico"
date: "`r Sys.Date()`"
author: DIVS, DGS, FPA, GASV
output:
rmdformats::material:
self_contained: true
thumbnails: true
lightbox: true
gallery: false
highlight: tango
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
knitr::opts_chunk$set(echo = TRUE)
kappa <- function(){
# We suppose mu_. as a exponential r.v.
alpha <- 10
theta <- 40
beta <- 1/theta
x <- seq(from = 0, to = 1, by=.001)
gamma_s_ <- dgamma(x, shape = alpha,
scale= beta)
df <- data.frame(x=x, gamma_s = gamma_s_)
p <- ggplot(data=df,
aes(x = x,
y = gamma_s)) +
geom_line(colour = "#000000") +
geom_area(alpha = 0.6, fill = "lightgray")
fig <- ggplotly(p)
fig
}
# density parameters
library(ggplot2)
library(plotly)
kappa()
# density parameters
library(ggplot2)
library(plotly)
mu_h <- function(){
# We suppose mu_. as a exponential r.v.
lambda <- 25
x <- seq(from = 0, to = 1, by=.01)
mu_h_ <- dexp(x, rate = lambda)
df <- data.frame(x=x, mu_h = mu_h_)
p <- ggplot(data=df,
aes(x = x,
y = mu_h)) +
geom_line(colour = "#000000") +
geom_area(alpha = 0.6, fill = "lightgray")
fig <- ggplotly(p)
fig
}
mu_h()
gamma_s <- function(){
# We suppose mu_. as a exponential r.v.
alpha <- 10
theta <- 50
beta <- 1/theta
x <- seq(from = 0, to = 1, by=.001)
gamma_s_ <- dgamma(x, shape = alpha,
scale= beta)
df <- data.frame(x=x, gamma_s = gamma_s_)
p <- ggplot(data=df,
aes(x = x,
y = gamma_s)) +
geom_line(colour = "#000000") +
geom_area(alpha = 0.6, fill = "lightgray")
fig <- ggplotly(p)
fig
}
kappa <- function(){
# We suppose mu_. as a exponential r.v.
alpha <- 10
theta <- 40
beta <- 1/theta
x <- seq(from = 0, to = 1, by=.001)
gamma_s_ <- dgamma(x, shape = alpha,
scale= beta)
df <- data.frame(x=x, gamma_s = gamma_s_)
p <- ggplot(data=df,
aes(x = x,
y = gamma_s)) +
geom_line(colour = "#000000") +
geom_area(alpha = 0.6, fill = "lightgray")
fig <- ggplotly(p)
fig
}
mu_h
gamma_s()
kappa()
